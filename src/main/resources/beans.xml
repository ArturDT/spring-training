<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="accountNumberGenerator" class="pl.training.bank.generator.IncrementalAccountNumberGenerator"/>

    <bean id="accountRepository" class="pl.training.bank.account.HashMapAccountRepository"/>

    <bean id="accountService" class="pl.training.bank.account.AccountService" init-method="init" destroy-method="destroy" scope="prototype">
        <constructor-arg name="accountNumberGenerator" ref="accountNumberGenerator"/>
        <constructor-arg name="accountRepository" ref="accountRepository"/>
    </bean>

    <bean id="dispositionService" class="pl.training.bank.disposition.DispositionService">
        <constructor-arg name="accountRepository" ref="accountRepository"/>
        <constructor-arg name="operations">
            <map>
                <entry key="deposit" value-ref="deposit"/>
                <entry key="withdraw" value-ref="withdraw"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="deposit" class="pl.training.bank.operation.DepositOperation"/>

    <bean id="withdraw" class="pl.training.bank.operation.WithdrawOperation"/>

    <bean class="pl.training.bank.common.BeanLoggerPostProcessor"/>

    <aop:aspectj-autoproxy/>

    <bean id="profiler" class="pl.training.bank.common.Profiler"/>
    <bean id="operationLogger" class="pl.training.bank.operation.ConsoleOperationLogger"/>

    <aop:config>
        <aop:aspect ref="profiler">
            <!--<aop:around method="logExecutionTime" pointcut="bean(dispositionService)"/>-->
            <aop:around method="logExecutionTime" pointcut="@annotation(pl.training.bank.common.ExecutionTime)"/>
        </aop:aspect>
        <aop:aspect ref="operationLogger">
            <aop:pointcut id="process" expression="execution(void pl.training.bank.disposition.DispositionService.process(..))"/>
            <aop:before method="onStart" pointcut="execution(void pl.training.bank.disposition.DispositionService.process(..)) and args(disposition)"/>
            <aop:after-returning method="onSuccess" pointcut-ref="process"/>
            <aop:after-throwing method="onException" pointcut-ref="process" throwing="ex"/>
        </aop:aspect>
    </aop:config>

</beans>